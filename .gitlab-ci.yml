image: node:14.18.1-alpine3.14

stages:
  - build
  - publish
  - trigger

build:
  stage: build
  tags: [docker]
  before_script:
    - apk add jq git
    # apply version from tag name
    - jq '.version=(if env.CI_COMMIT_TAG == null then "0.0.0-snapshot" else env.CI_COMMIT_TAG end)' package.json > package.json.mod && mv package.json.mod package.json
  script:
    - yarn
    - yarn build
  artifacts:
    paths:
      - build/

publish-assets:
  stage: publish
  tags: [docker]
  script:
    - apk add jq curl
    - tar -zcvf dist.tar.gz build/
    - RELEASE_ID=$(curl -s -H "Authorization:token $GITHUB_API_TOKEN" https://api.github.com/repos/mysteriumnetwork/dvpn-web/releases/tags/$CI_COMMIT_TAG | jq -r .id)
    - curl --data-binary @dist.tar.gz -H "Authorization:token $GITHUB_API_TOKEN" -H "Content-Type:application/octet-stream" https://uploads.github.com/repos/mysteriumnetwork/dvpn-web/releases/$RELEASE_ID/assets?name=dist.tar.gz
    - curl --data-binary @compatibility.json -H "Authorization:token $GITHUB_API_TOKEN" -H "Content-Type:application/octet-stream" https://uploads.github.com/repos/mysteriumnetwork/dvpn-web/releases/$RELEASE_ID/assets?name=compatibility.json
  only:
    - tags

trigger-go-dvpn-web:
  stage: trigger
  tags: [docker]
  script:
    - apk add curl
    - curl -X POST -F "token=$GO_DVPN_WEB_TRIGGER_TOKEN" -F "ref=master" -F "variables[GIT_TAG_VERSION]=$CI_COMMIT_TAG" https://gitlab.com/api/v4/projects/20001631/trigger/pipeline
  only:
    - tags
